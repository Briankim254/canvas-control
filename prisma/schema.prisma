generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  staffId           Int
  type              String         @db.VarChar(255)
  provider          String         @db.VarChar(255)
  providerAccountId String         @db.VarChar(255)
  refresh_token     String?        @db.VarChar(255)
  access_token      String?        @db.VarChar(255)
  expires_at        Int?
  token_type        String?        @db.VarChar(255)
  scope             String?        @db.VarChar(255)
  id_token          String?        @db.VarChar(255)
  session_state     String?        @db.VarChar(255)
  createdAt         DateTime       @default(now()) @db.DateTime(0)
  updatedAt         DateTime       @default(now()) @updatedAt @db.DateTime(0)
  staff_accounts    User @relation(fields: [staffId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "accounts_ibfk_1")

  @@id([provider, providerAccountId])
  @@index([staffId], map: "staffId")
  @@map("accounts")
}

model Session {
  sessionToken   String         @id @unique(map: "sessionToken") @db.VarChar(255)
  staffId        Int
  expires        DateTime       @db.DateTime(0)
  createdAt      DateTime       @default(now()) @db.DateTime(0)
  updatedAt      DateTime       @default(now()) @updatedAt @db.DateTime(0)
  staff_accounts User @relation(fields: [staffId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "sessions_ibfk_1")

  @@index([staffId], map: "staffId")
  @@map("sessions")
}

model VerificationToken {
  identifier String   @db.VarChar(255)
  token      String   @db.VarChar(255)
  expires    DateTime @db.DateTime(0)

  @@id([identifier, token])
  @@map("verification_tokens")
}

model User {
  id            Int       @id @default(autoincrement())
  first_name    String    @db.VarChar(50)
  last_name     String    @db.VarChar(50)
  email         String    @unique(map: "email") @db.VarChar(100)
  phone         String    @unique(map: "phone_UNIQUE") @db.VarChar(20)
  password      String    @db.VarChar(255)
  created_on    DateTime? @default(now()) @db.Timestamp(0)
  edited_on     DateTime? @default(now()) @db.Timestamp(0)
  role          String    @db.VarChar(100)
  emailVerified DateTime? @db.DateTime(0)
  verification  String    @default("UNVERIFIED") @db.VarChar(255)
  Image         String?   @db.VarChar(255)
  accounts      Account[]
  sessions      Session[]

  @@map("staff_accounts")
}

model staff_roles {
  id               String @id @db.VarChar(100)
  role_description String @db.VarChar(45)
}
